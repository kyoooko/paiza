# 自分の回答（できず）
# def uruudoshi?(y)
#   (y % 400).zero? || (y % 100).nonzero? && (y % 4).zero?
# end

# y,m,d = gets.chomp.split(' ').map(&:to_i)


# puts uruudoshi?(y) ? 'Yes' : 'No'

# 通常年なら365/7=52あまり１
# なので1800年1月1日が水曜なら1801年1月1日は木曜日(翌日になる)
# （1800年1月7日は7/7=1あまりなしで火曜日、1800年12月31日は365/7=52あまり１で水曜日、1800年1月1日は木曜日)
# 閏年(2020年）の場合、366/7=52あまり2
# なので2020年1月1日(閏年)が水曜なら2021年1月1日は金曜日(翌々日になる)

# SUN = 0
# MON = 1
# TUE = 2
# WED = 3
# THR = 4
# FRI = 5
# SUT = 6

# if y == 1800
#   day_of_the_week = [1800,3]
# elsif
# end

# ===========================================
# 解答（なるほど、、なんとか理解はできた）

DAYS_OF_WEEK = %w[日曜日 月曜日 火曜日 水曜日 木曜日 金曜日 土曜日]
# これは西暦0年0月0日＝日曜日の前提。1800年1月1日＝水曜日から逆算したのか？

def is_leap?(y)
  (y % 400).zero? || (y % 100).nonzero? && (y % 4).zero?
end

adjust_by_month = [0, 1, -1, 0, 0, 1, 1, 2, 3, 3, 4, 4]
# [なし(入力が1月の場合は前月がないのでなし）、1月(入力が2月の場合は前月が1月なので）、2月...]

y, m, d = gets.split.map(&:to_i)

p leap_years = (y / 4 - y / 100 + y / 400) #2020年の場合、閏年は490回目

p days = 365 * y + leap_years #2019年12月31日までで737790日（多分0年ありきなのか）
p days += (m - 1) * 30 + d - 1 + adjust_by_month[m - 1] #入力した日が何日目か（#2020年11月15日の場合、738108)
p days -= 1 if is_leap?(y) && m < 3
# 閏年の１、2月の場合は-1(leap_years来てないのに前に足してしまったので)

puts DAYS_OF_WEEK[days % 7]

